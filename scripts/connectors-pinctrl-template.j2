/*
 * NOTE: Autogenerated file using gen-connectors-dtsi.py
 *
 * SPDX-License-Identifier: Apache-2.0
 */

&pinctrl {
	/* UART */

	{% for conn in connectors %}
	/omit-if-no-ref/ uart_{{ conn.name }}_default: uart_{{ conn.name }}_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, {{ conn.pins.io2.port }}, {{ conn.pins.io2.pin }})>,
				<NRF_PSEL(UART_RTS, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>;
		};
		group2 {
			psels = <NRF_PSEL(UART_RX, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>,
				<NRF_PSEL(UART_CTS, {{ conn.pins.io1.port }}, {{ conn.pins.io1.pin }})>;
			bias-pull-up;
		};
	};
{{ newline }}
	/omit-if-no-ref/ uart_{{ conn.name }}_sleep: uart_{{ conn.name }}_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, {{ conn.pins.io2.port }}, {{ conn.pins.io2.pin }})>,
				<NRF_PSEL(UART_RX, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>,
				<NRF_PSEL(UART_RTS, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>,
				<NRF_PSEL(UART_CTS, {{ conn.pins.io1.port }}, {{ conn.pins.io1.pin }})>;
			low-power-enable;
		};
	};
{{ newline }}
	{% endfor %}

	/* I2C */

	{% for conn in connectors %}
	/omit-if-no-ref/ i2c_{{ conn.name }}_default: i2c_{{ conn.name }}_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>,
				<NRF_PSEL(TWIM_SCL, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>;
		};
	};
{{ newline }}
	/omit-if-no-ref/ i2c_{{ conn.name }}_sleep: i2c_{{ conn.name }}_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>,
				<NRF_PSEL(TWIM_SCL, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>;
			low-power-enable;
		};
	};
{{ newline }}
	{% endfor %}

	/* SPI */

	{% for conn in connectors %}
	/omit-if-no-ref/ spi_{{ conn.name }}_default: spi_{{ conn.name }}_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>,
				<NRF_PSEL(SPIM_MOSI, {{ conn.pins.io2.port }}, {{ conn.pins.io2.pin }})>,
				<NRF_PSEL(SPIM_MISO, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>;
		};
	};
{{ newline }}
	/omit-if-no-ref/ spi_{{ conn.name }}_sleep: spi_{{ conn.name }}_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, {{ conn.pins.io4.port }}, {{ conn.pins.io4.pin }})>,
				<NRF_PSEL(SPIM_MOSI, {{ conn.pins.io2.port }}, {{ conn.pins.io2.pin }})>,
				<NRF_PSEL(SPIM_MISO, {{ conn.pins.io3.port }}, {{ conn.pins.io3.pin }})>;
			low-power-enable;
		};
	};
{{ newline }}
	{% endfor %}
};
